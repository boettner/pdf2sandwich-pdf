#!/bin/bash
function check_dependencies {
	command -v convert >/dev/null 2>&1 || { echo >&2 "No 'pdftotext' installed. On most Linux distributions, pdftotext is part of 'poppler-utils' package."; exit 1; }
	command -v tesseract >/dev/null 2>&1 || { echo >&2 "No 'tesseract' installed. Install 'tesseract-ocr' package."; exit 1; }
}

function count_words_in_pdf {
	pdftotext "$PDFINFILE" "/tmp/temp.txt"
	local AMOUNT_OF_WORDS=$(wc -w < "/tmp/temp.txt")
	rm /tmp/temp.txt
	echo "$AMOUNT_OF_WORDS"
}

PDFINFILE=$1
PDFOUTFILE=${2:-$PDFINFILE}
LANG=deu	# See man tesseract > LANGUAGES
MIN_WORDS=5	# Number of words required to accept pdftotext result.

check_dependencies

if [[ -z "$PDFINFILE" ]]; then
	echo "syntax: $(basename $0) <INPUT PDF> [<OUTPUT PDF>]"
	exit 1
fi

PREV_IFS=$IFS
IFS='\0'

# Check if pdf already has embedded text.
WORDCOUNT=$(count_words_in_pdf $PDFINFILE)

# If that fails, try Tesseract.
EXIT_CODE=0
if [[ $WORDCOUNT -ge $MIN_WORDS ]]
then
	echo "pdftotext extracted $WORDCOUNT words from file. Skip OCR process ..."
	EXIT_CODE=1
else
	echo "Attempting OCR extraction..."

	# Use imagemagick to convert the PDF to a high-rest multi-page TIFF.
	convert -density 300 "$PDFINFILE" -depth 8 -strip -background white -alpha off /tmp/temp.tiff

	FILE_BASENAME=$(dirname "$PDFOUTFILE")/$(basename "$PDFOUTFILE" .pdf)

	# Then use Tesseract to perform OCR on the tiff.
	tesseract /tmp/temp.tiff "$FILE_BASENAME" -l $LANG pdf
	OCR_SUCCESS=$?

	# We don't need then intermediate TIFF file, so discard it.
	rm /tmp/temp.tiff

	if [[ "$OCR_SUCCESS" -ne 0 ]]; then
		echo "OCR processing failed!"
		EXIT_CODE=1
	else
		WORDCOUNT=$(count_words_in_pdf $PDFOUTFILE)
		echo "$WORDCOUNT words in new sandwiched pdf \O/"
	fi
fi

IFS=$PREV_IFS
exit $EXIT_CODE
